<!-- Toast Container -->
<div id="toast-container" class="fixed top-4 right-4 z-50 space-y-2">
    <!-- Toast messages will be dynamically added here -->
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Function to show toast
    function showToast(message, type = 'success') {
        const container = document.getElementById('toast-container');
        const toastId = 'toast-' + Date.now();
        
        const colors = {
            success: {
                bg: 'bg-green-100',
                border: 'border-green-400',
                text: 'text-green-700',
                icon: 'text-green-400',
                iconPath: 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'
            },
            error: {
                bg: 'bg-red-100',
                border: 'border-red-400',
                text: 'text-red-700',
                icon: 'text-red-400',
                iconPath: 'M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'
            },
            warning: {
                bg: 'bg-yellow-100',
                border: 'border-yellow-400',
                text: 'text-yellow-700',
                icon: 'text-yellow-400',
                iconPath: 'M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z'
            },
            info: {
                bg: 'bg-blue-100',
                border: 'border-blue-400',
                text: 'text-blue-700',
                icon: 'text-blue-400',
                iconPath: 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'
            }
        };
        
        const color = colors[type] || colors.success;
        
        const toast = document.createElement('div');
        toast.id = toastId;
        toast.className = `transform transition-all duration-300 ease-in-out translate-x-full opacity-0 max-w-sm w-full ${color.bg} ${color.border} ${color.text} border rounded-lg shadow-lg p-4`;
        
        toast.innerHTML = `
            <div class="flex items-start">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 ${color.icon}" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="${color.iconPath}"></path>
                    </svg>
                </div>
                <div class="ml-3 flex-1">
                    <p class="text-sm font-medium">${message}</p>
                </div>
                <div class="ml-4 flex-shrink-0 flex">
                    <button onclick="removeToast('${toastId}')" class="inline-flex ${color.text} hover:${color.text.replace('700', '900')} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-${type === 'success' ? 'green' : type === 'error' ? 'red' : type === 'warning' ? 'yellow' : 'blue'}-500">
                        <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
        `;
        
        container.appendChild(toast);
        
        // Trigger animation
        setTimeout(() => {
            toast.classList.remove('translate-x-full', 'opacity-0');
            toast.classList.add('translate-x-0', 'opacity-100');
        }, 100);
        
        // Auto remove after 5 seconds
        setTimeout(() => {
            removeToast(toastId);
        }, 5000);
    }
    
    // Function to remove toast
    window.removeToast = function(toastId) {
        const toast = document.getElementById(toastId);
        if (toast) {
            toast.classList.add('translate-x-full', 'opacity-0');
            setTimeout(() => {
                toast.remove();
            }, 300);
        }
    };
    
    // Make showToast globally available
    window.showToast = showToast;
    
    // Check for flash messages and show them as toasts
    const flashMessages = document.querySelectorAll('[data-flash-message]');
    console.log('Found flash messages:', flashMessages.length);
    flashMessages.forEach(element => {
        const message = element.getAttribute('data-flash-message');
        const type = element.getAttribute('data-flash-type') || 'success';
        console.log('Flash message:', message, 'Type:', type);
        if (message) {
            showToast(message, type);
        }
    });
});
</script>
